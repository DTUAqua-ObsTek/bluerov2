import requests
from xml.etree import ElementTree as ET
import argparse
from bs4 import BeautifulSoup
import urllib.request
import urllib.parse
import re


def listFD(url, ext=''):
    page = requests.get(url).text
    soup = BeautifulSoup(page, 'html.parser')
    parsed_uri = urllib.parse.urlparse(url)
    domainName = '{uri.scheme}://{uri.netloc}'.format(uri=parsed_uri)
    return [domainName + node.get('href') for node in soup.find_all('a') if node.get('href').endswith(ext)]


def build_enum():
    with open("enum_defs.raw", "w") as f:
        xml_urls = listFD("https://www.github.com/mavlink/qgroundcontrol/tree/master/src/FirmwarePlugin/APM", "xml")
        out_dict = {}
        for xml_url in xml_urls:
            if "Sub" in xml_url:
                parsed = urllib.parse.urlparse(xml_url)
                raw_xml_url = parsed._replace(netloc="raw.githubusercontent.com", path=parsed.path.replace("/blob","")).geturl()
                version = re.findall(r"Sub.\d.\d", raw_xml_url)
                tree = ET.fromstring(requests.get(raw_xml_url).text)
                for param in tree.iter("param"):
                    if param.attrib["name"] in "BTN0_FUNCTION":
                        for values in param.iter("values"):
                            tmp = {value.text.lower(): int(value.attrib["code"]) for value in values.iter("value")}
                        out_dict[version[0]] = tmp
                        break
        f.write("THIS FILE AUTOMATICALLY GENERATED BY update_enums.py\n\n")
        for version, enums in out_dict.items():
            key = version
            values = [f"\n\t{fcn} = {enum}" for fcn,enum in enums.items()]
            f.write(key + " = {")
            f.writelines(values)
            f.write("\n}\n\n")
        print("done")






if __name__=="__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("sub_version", choices=["3.4", "3.5", "3.6"])
    build_enum()